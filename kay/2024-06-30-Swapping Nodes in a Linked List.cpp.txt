/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        ListNode *frontNode = head;
        ListNode *endNode = NULL;
        ListNode *curNode = head;
        int len = 1;
        while (curNode) {
            if (endNode) {
                endNode = endNode->next;
            }
            if (len == k) {
                frontNode = curNode;
                endNode = head;
            }
            curNode = curNode->next;
            len++;
        }
        swap(frontNode->val, endNode->val);
        return head;
    }
};