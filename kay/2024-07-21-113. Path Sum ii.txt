/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root, int targetSum, int curSum, vector<vector<int>>& ans, vector<int>& curArr) {
        if (root == nullptr)
            return;
        curArr.push_back(root->val);
        if (root->left == nullptr && root->right == nullptr && curSum == targetSum)
            ans.push_back(curArr);
        if (root->left)
            dfs(root->left, targetSum, curSum + root->left->val, ans, curArr);
        if (root->right)
            dfs(root->right, targetSum, curSum + root->right->val, ans, curArr);
        curArr.pop_back();

    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans;
        vector<int> curArr;
        if (root)
            dfs(root, targetSum, root->val, ans, curArr);
        return ans;
    }
};