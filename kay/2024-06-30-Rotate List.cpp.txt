/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (head == NULL)
            return NULL;
        if (head->next == NULL)
            return head;
        ListNode* new_head = head;
        ListNode* old_tail = head;
        ListNode* new_tail = head;
        int len = 1;
        while (old_tail->next != NULL) {
            len++;
            old_tail = old_tail->next;
        }
        old_tail->next = head; // 이걸 초반에 해줘서 틀림
        k =  len - (k % len);
        printf("%d\n", k);
        for (int i =  0; i < k; i++) {
        // for (int i =  0; i < k - 1; i++) {
            // new_tail = new_tail->next;
            new_tail = new_head;
            new_head =new_head->next;
        }
        // new_head = new_tail->next;
        new_tail->next = NULL;
        return new_head;
    }
};