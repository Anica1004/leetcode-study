import java.util.*;

class Solution {
    public int maxDepth(TreeNode root) {

        if(root == null) return 0;
        int count = 0; 
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);

        while(!q.isEmpty()) {
            int size = q.size();
            for(int i =0; i<size;i++) {
                TreeNode temp = q.poll();
                if(temp.left != null) q.add(temp.left);
                if(temp.right != null) q.add(temp.right);
            }
            count++;
        }
        return count;
    }
}
//Let n be the number of nodes in the binary tree.
//O(n)

public int maxDepth(TreeNode root) {
    if(root==null){
        return 0;
    }
    return 1+Math.max(maxDepth(root.left),maxDepth(root.right));
}


